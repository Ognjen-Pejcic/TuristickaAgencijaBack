// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Model.Migrations
{
    [DbContext(typeof(TuristickaOrgContext))]
    [Migration("20220130155235_login")]
    partial class login
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Destinacija", b =>
                {
                    b.Property<int>("DestinacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivDestinacije")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinacijaId");

                    b.ToTable("Destinacije");
                });

            modelBuilder.Entity("Model.Domain.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTekucegRacuna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivHotela")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.ToTable("Hoteli");
                });

            modelBuilder.Entity("Model.Domain.Kategorija", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivKategroije")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("Model.Domain.Korisnik", b =>
                {
                    b.Property<int>("JMBG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrPasosa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImePrezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JMBG");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("Model.Domain.Radnik", b =>
                {
                    b.Property<int>("SifraRadnika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImeRadnika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SifraRadnika");

                    b.ToTable("Radnici");
                });

            modelBuilder.Entity("Model.Domain.Smestaj", b =>
                {
                    b.Property<int>("SmestajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivSmestaja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SmestajId");

                    b.ToTable("Smestaji");
                });

            modelBuilder.Entity("Model.Domain.StavkaRezervacijeHotela", b =>
                {
                    b.Property<int>("StavkaRezervacijeHotelaId")
                        .HasColumnType("int");

                    b.Property<int>("ZahtevZaRezervisanjeHotelaId")
                        .HasColumnType("int");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("TipSmestajaId")
                        .HasColumnType("int");

                    b.Property<int>("TipSobeId")
                        .HasColumnType("int");

                    b.HasKey("StavkaRezervacijeHotelaId", "ZahtevZaRezervisanjeHotelaId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("TipSmestajaId");

                    b.HasIndex("TipSobeId");

                    b.HasIndex("ZahtevZaRezervisanjeHotelaId");

                    b.ToTable("StavkeRHotela");
                });

            modelBuilder.Entity("Model.Domain.TipSmestaja", b =>
                {
                    b.Property<int>("TipSmestajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivTipaSmestaja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipSmestajaId");

                    b.ToTable("TipoviSmestaja");
                });

            modelBuilder.Entity("Model.Domain.TipSobe", b =>
                {
                    b.Property<int>("TipSobeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivTipaSobe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipSobeId");

                    b.ToTable("TipoviSobe");
                });

            modelBuilder.Entity("Model.Domain.ZahtevKorisnika", b =>
                {
                    b.Property<int>("SifraZahteva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("VremeBoravka")
                        .HasColumnType("int");

                    b.HasKey("SifraZahteva");

                    b.ToTable("ZahteviKorisnika");
                });

            modelBuilder.Entity("Model.Domain.ZahtevZaRezervisanjeHotela", b =>
                {
                    b.Property<int>("SifraZahteva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrNocenja")
                        .HasColumnType("int");

                    b.Property<int>("BrSoba")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PotvrdaId")
                        .HasColumnType("int");

                    b.Property<int?>("RadnikId")
                        .HasColumnType("int");

                    b.Property<int?>("ZahtevKorisnikaId")
                        .HasColumnType("int");

                    b.HasKey("SifraZahteva");

                    b.HasIndex("HotelId");

                    b.HasIndex("PotvrdaId")
                        .IsUnique()
                        .HasFilter("[PotvrdaId] IS NOT NULL");

                    b.HasIndex("RadnikId");

                    b.HasIndex("ZahtevKorisnikaId")
                        .IsUnique()
                        .HasFilter("[ZahtevKorisnikaId] IS NOT NULL");

                    b.ToTable("ZahteviZaRez");
                });

            modelBuilder.Entity("Model.Potvrda", b =>
                {
                    b.Property<int>("BrojPotvrde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DestinacijaId")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SmestajId")
                        .HasColumnType("int");

                    b.Property<string>("Usluga")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrojPotvrde");

                    b.HasIndex("DestinacijaId");

                    b.HasIndex("SmestajId");

                    b.ToTable("Potvrde");
                });

            modelBuilder.Entity("Model.Domain.StavkaRezervacijeHotela", b =>
                {
                    b.HasOne("Model.Domain.Kategorija", "Kategorija")
                        .WithMany("Stavke")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Domain.Korisnik", "Korisnik")
                        .WithMany("Stavke")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Domain.TipSmestaja", "TipSmestaja")
                        .WithMany("Stavke")
                        .HasForeignKey("TipSmestajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Domain.TipSobe", "TipSobe")
                        .WithMany("Stavke")
                        .HasForeignKey("TipSobeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Domain.ZahtevZaRezervisanjeHotela", "ZahtevZaRezervisanjeHotela")
                        .WithMany("StavkaRezervacijeHotela")
                        .HasForeignKey("ZahtevZaRezervisanjeHotelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorija");

                    b.Navigation("Korisnik");

                    b.Navigation("TipSmestaja");

                    b.Navigation("TipSobe");

                    b.Navigation("ZahtevZaRezervisanjeHotela");
                });

            modelBuilder.Entity("Model.Domain.ZahtevZaRezervisanjeHotela", b =>
                {
                    b.HasOne("Model.Domain.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId");

                    b.HasOne("Model.Potvrda", "Potvrda")
                        .WithOne("Zahtev")
                        .HasForeignKey("Model.Domain.ZahtevZaRezervisanjeHotela", "PotvrdaId");

                    b.HasOne("Model.Domain.Radnik", "Radnik")
                        .WithMany()
                        .HasForeignKey("RadnikId");

                    b.HasOne("Model.Domain.ZahtevKorisnika", "ZahtevKorisnika")
                        .WithOne("ZahtevZaRezervisanjeHotela")
                        .HasForeignKey("Model.Domain.ZahtevZaRezervisanjeHotela", "ZahtevKorisnikaId");

                    b.Navigation("Hotel");

                    b.Navigation("Potvrda");

                    b.Navigation("Radnik");

                    b.Navigation("ZahtevKorisnika");
                });

            modelBuilder.Entity("Model.Potvrda", b =>
                {
                    b.HasOne("Model.Destinacija", "Destinacija")
                        .WithMany("Potvrde")
                        .HasForeignKey("DestinacijaId");

                    b.HasOne("Model.Domain.Smestaj", "Smestaj")
                        .WithMany("Potvrde")
                        .HasForeignKey("SmestajId");

                    b.Navigation("Destinacija");

                    b.Navigation("Smestaj");
                });

            modelBuilder.Entity("Model.Destinacija", b =>
                {
                    b.Navigation("Potvrde");
                });

            modelBuilder.Entity("Model.Domain.Kategorija", b =>
                {
                    b.Navigation("Stavke");
                });

            modelBuilder.Entity("Model.Domain.Korisnik", b =>
                {
                    b.Navigation("Stavke");
                });

            modelBuilder.Entity("Model.Domain.Smestaj", b =>
                {
                    b.Navigation("Potvrde");
                });

            modelBuilder.Entity("Model.Domain.TipSmestaja", b =>
                {
                    b.Navigation("Stavke");
                });

            modelBuilder.Entity("Model.Domain.TipSobe", b =>
                {
                    b.Navigation("Stavke");
                });

            modelBuilder.Entity("Model.Domain.ZahtevKorisnika", b =>
                {
                    b.Navigation("ZahtevZaRezervisanjeHotela");
                });

            modelBuilder.Entity("Model.Domain.ZahtevZaRezervisanjeHotela", b =>
                {
                    b.Navigation("StavkaRezervacijeHotela");
                });

            modelBuilder.Entity("Model.Potvrda", b =>
                {
                    b.Navigation("Zahtev");
                });
#pragma warning restore 612, 618
        }
    }
}
